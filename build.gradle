apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'

buildscript {
    repositories {
        jcenter()
        google()
    }
   dependencies {
      classpath 'com.android.tools.build:gradle:3.2.1'
      classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
      classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}

allprojects {
   repositories {
      mavenLocal()
      jcenter()
      maven {
         url "https://dl.bintray.com/mtschach/Mss"
      }
      maven {
         url "https://oss.sonatype.org/content/repositories/snapshots"
      }
      maven {
         url "https://mvnrepository.com/artifact/de.dfki.mary/marytts-runtime"
      }
      maven {
         url "https://mvnrepository.com/artifact/de.dfki.mary/marytts-lang-de"
	  }
   }
}


configurations {
   genClasses
   commonCompile
   clientCompile.extendsFrom commonCompile
   serverCompile.extendsFrom commonCompile
   testCompile.extendsFrom commonCompile
   testCompile.extendsFrom serverCompile
   testCompile.extendsFrom clientCompile
   compile.extendsFrom serverCompile
   compile.extendsFrom clientCompile
   compile.extendsFrom commonCompile
}


sourceSets {
   common {
      java {
         srcDir 'gen'
         srcDir 'common'
      }
   }
   
   server {
      java {
         srcDir 'server'
         srcDir 'gen'
         srcDir 'common'
      }
   }
   
   client {
      java {
         srcDir 'client'
         srcDir 'gen'
         srcDir 'common'
      }
   }

   test {
      java {
         compileClasspath += client.output + server.output + common.output
         runtimeClasspath += client.output + server.output + common.output
         srcDir 'test'
      }
   }
}

dependencies {
   commonCompile  group: 'Mss'                        , name: 'MssUtils'                           , version: 'latest.release'
   commonCompile  group: 'Mss'                        , name: 'MssConfigTools'                     , version: 'latest.release'
   commonCompile  group: 'Mss'                        , name: 'MssNetUtils'                        , version: 'latest.release'
   commonCompile  group: 'org.apache.logging.log4j'   , name: 'log4j-core'                         , version: 'latest.release'
   commonCompile  group: 'org.apache.logging.log4j'   , name: 'log4j-api'                          , version: 'latest.release'
   commonCompile  group: 'commons-cli'                , name: 'commons-cli'                        , version: '1.4'
   
   clientCompile  group: 'net.sf.sociaal'             , name: 'freetts'                            , version: '1.2.2'
   clientCompile  group: 'de.dfki.mary'               , name: 'marytts-runtime'                    , version: '5.2'
   clientCompile  group: 'de.dfki.mary'               , name: 'marytts-lang-de'                    , version: '5.2'
   clientCompile  group: 'de.dfki.mary'               , name: 'voice-bits1-hsmm'                   , version: '5.2'
   clientCompile  group: 'Mss'                        , name: 'MssDbUtils'                         , version: 'latest.release'
   clientCompile  group: 'org.xerial'                 , name: 'sqlite-jdbc'                        , version: '3.7.2'
   
   serverCompile  group: 'Mss'                        , name: 'MssDbUtils'                         , version: 'latest.release'
   serverCompile  group: 'org.xerial'                 , name: 'sqlite-jdbc'                        , version: '3.7.2'
   
   testCompile    group: 'junit'                      , name: 'junit'                              , version: '4.12'
   
   genClasses 	group: 'Mss'                           , name: 'MssXml2Class'                       , version: 'latest.release'
}

compileCommonJava.dependsOn('genClasses')
compileServerJava.dependsOn('genClasses')
compileClientJava.dependsOn('genClasses')


jar {
   dependsOn 'clientJar'
   dependsOn 'clientJarFull'
   dependsOn 'serverJar'
}


task genClasses {
   dependsOn ('genParams');
}


task genParams(type:JavaExec) {
   group 'gen'
   workingDir = "${rootDir}"
   main      = "de.mss.xml2class.Xml2Class"
   classpath {[
      configurations.genClasses
   ]}
   args '-t', 'templates', '-i', 'params/client', '-o', 'gen'
}


clean.doFirst {
   delete "${rootDir}/gen"
}


task copyDependencies(type: Copy) {
   from(configurations.clientCompile)
   into("$buildDir/libs/dependencies")
}


task clientJar(type: Jar) {
   manifest {
      attributes "Main-Class": "de.mss.autologout.client.AutoLogoutClient"
   }
   baseName = project.name + 'Client'
   from(sourceSets.client.output)
   with jar
}


task clientJarFull(type: Jar) {
   manifest {
      attributes "Main-Class": "de.mss.autologout.client.AutoLogoutClient"
   }
   baseName = project.name + 'FullClient'
   from(sourceSets.client.output)
   from {
      configurations.clientCompileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
   }
   with jar
}


task serverJar(type: Jar) {
   manifest {
      attributes "Main-Class": "de.mss.autologout.server.AutoLogoutServer"
   }
   baseName = project.name + 'Server'
   from(sourceSets.server.output)
   from {
      configurations.serverCompileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
   }
   with jar
}


task publishLocal {
   dependsOn 'publishToMavenLocal'
}


// Define the main class for the application
mainClassName = 'de.mss.autologout.server.AutoLogoutServer'
